float E[][6]={
{1,2,-43.75,-27.07,-18.0,-5.0},
{1,1,-20.0,0.0,20.0,-25.0},
{1,2,5.0,18.0,27.08,43.78},
{2,2,-43.76,-27.08,-18.0,-5.0},
{2,1,-20.0,0.0,20.0,-25.0},
{2,2,5.0,18.0,27.0,43.69}};
float S[][6]={
{1,1,40.0,45.0,50.0,0.0},
{1,1,53.5,56.5,59.5,0.0},
{1,1,65.0,75.0,85.0,0.0}};
byte R[][100] ={
{1,3,3,3},
{1,3,2,3},
{1,3,1,3},
{1,2,3,2},
{1,2,2,2},
{1,2,1,2},
{1,1,3,1},
{1,1,2,1},
{1,1,1,1}};
byte CE[]={3,3},CS[]={3},Tam[]={2,1,9};
float LimE[2][2]={{-25.0,25.0},{-25.0,25.0}};
float x[]={Ingrese Entrada 1,Ingrese Entrada 2},OUTF[1];
float S_Temp[100][5],U_Temp[50];
void setup(){
float Uin[2][50],Uout[1][50];
Entrada(CE,x,E,LimE,Uin,Tam[0]);
Salida_Reglas(R,Uin,CE,CS,Uout,Tam);
byte con=0;
for(byte i=0;i<Tam[1];i++){
TemporalMatriz(S_Temp,S,con,con+CS[i]);
TemporalVector(U_Temp,Uout,i,CS[i]);
con=con+CS[i];
Salida_Fuzzy(S_Temp,U_Temp,CS[i],OUTF);
}
}
void loop(){}
