float E[][6]={
{1,1,-2.0,0.0,2.0,0.0},
{1,1,0.5,2.5,4.5,0.0},
{1,1,3.0,5.0,7.0,0.0},
{2,1,-2.0,0.0,2.0,0.0},
{2,1,0.5,2.5,4.5,0.0},
{2,1,3.0,5.0,7.0,0.0}};
float S[][6]={
{1,1,0.0,100.0,220.0,0.0},
{1,1,70.0,80.0,250.0,0.0},
{1,1,235.0,255.0,361.3,0.0}};
byte R[][100] ={
{0,1,1,1},
{0,1,2,1},
{0,1,3,1},
{0,2,1,2},
{0,2,2,2},
{0,2,3,2},
{0,3,1,3},
{0,3,2,3},
{0,3,3,3}};
byte CE[]={3,3},CS[]={3},Tam[]={2,1,9};
float LimE[2][2]={{0.0,5.0},{0.0,5.0}};
float x[]={Ingrese Entrada 1,Ingrese Entrada 2},OUTF[1];
float S_Temp[100][5],U_Temp[50];
void setup(){
float Uin[2][50],Uout[1][50];
Entrada(CE,x,E,LimE,Uin,Tam[0]);
Salida_Reglas(R,Uin,CE,CS,Uout,Tam);
byte con=0;
for(byte i=0;i<Tam[1];i++){
TemporalMatriz(S_Temp,S,con,con+CS[i]);
TemporalVector(U_Temp,Uout,i,CS[i]);
con=con+CS[i];
Salida_Fuzzy(S_Temp,U_Temp,CS[i],OUTF);
}
}
void loop(){}
